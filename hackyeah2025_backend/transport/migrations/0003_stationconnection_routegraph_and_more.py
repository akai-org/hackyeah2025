# Generated by Django 5.2.7 on 2025-10-04 17:17

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('transport', '0002_journeystatus_ticket_weather_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='StationConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_km', models.DecimalField(decimal_places=2, help_text='Physical distance between stations in kilometers', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Distance (km)')),
                ('estimated_time_minutes', models.IntegerField(help_text='Typical travel time between these stations', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Estimated travel time (minutes)')),
                ('is_bidirectional', models.BooleanField(default=True, help_text='Whether trains can travel in both directions on this connection')),
                ('max_speed_kmh', models.DecimalField(blank=True, decimal_places=2, help_text='Speed limit on this section', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Maximum speed (km/h)')),
                ('active', models.BooleanField(default=True, help_text='Whether this connection is currently operational')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_station', models.ForeignKey(help_text='Starting station of the connection', on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_connections', to='transport.station', verbose_name='From station')),
                ('to_station', models.ForeignKey(help_text='Destination station of the connection', on_delete=django.db.models.deletion.CASCADE, related_name='incoming_connections', to='transport.station', verbose_name='To station')),
            ],
            options={
                'verbose_name': 'Station connection',
                'verbose_name_plural': 'Station connections',
                'ordering': ['from_station', 'to_station'],
            },
        ),
        migrations.CreateModel(
            name='RouteGraph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(help_text='Order of this connection in the route (1, 2, 3...)', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Sequence in route')),
                ('scheduled_departure_from_first_station', models.TimeField(help_text='When the train departs from the first station of this connection', verbose_name='Departure from first station')),
                ('scheduled_arrival_at_second_station', models.TimeField(help_text='When the train arrives at the second station of this connection', verbose_name='Arrival at second station')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_graphs', to='transport.route', verbose_name='Route')),
                ('connection', models.ForeignKey(help_text='Connection between two consecutive stations on this route', on_delete=django.db.models.deletion.CASCADE, related_name='route_graphs', to='transport.stationconnection', verbose_name='Station connection')),
            ],
            options={
                'verbose_name': 'Route graph connection',
                'verbose_name_plural': 'Route graph connections',
                'ordering': ['route', 'sequence'],
            },
        ),
        migrations.AddIndex(
            model_name='stationconnection',
            index=models.Index(fields=['from_station', 'to_station'], name='transport_s_from_st_109adf_idx'),
        ),
        migrations.AddIndex(
            model_name='stationconnection',
            index=models.Index(fields=['active', 'from_station'], name='transport_s_active_86fc58_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stationconnection',
            unique_together={('from_station', 'to_station')},
        ),
        migrations.AddIndex(
            model_name='routegraph',
            index=models.Index(fields=['route', 'sequence'], name='transport_r_route_i_d16b93_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='routegraph',
            unique_together={('route', 'connection', 'sequence'), ('route', 'sequence')},
        ),
    ]
